%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Large Colored Title Article
% LaTeX Template
% Version 1.1 (25/11/12)
%
% This template has been downloaded from:
% http://www.LaTeXTemplates.com
%
% Original author:
% Frits Wenneker (http://www.howtotex.com)
%
% License:
% CC BY-NC-SA 3.0 (http://creativecommons.org/licenses/by-nc-sa/3.0/)
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%----------------------------------------------------------------------------------------
%	PACKAGES AND OTHER DOCUMENT CONFIGURATIONS
%----------------------------------------------------------------------------------------

\documentclass[DIV=calc, paper=a4, fontsize=10pt, twocolumn]{scrartcl}	 % A4 paper and 11pt font size

\usepackage{lipsum} % Used for inserting dummy 'Lorem ipsum' text into the template
\usepackage{url}
\usepackage{natbib}
\usepackage[english]{babel} % English language/hyphenation
\usepackage[protrusion=true,expansion=true]{microtype} % Better typography
\usepackage{amsmath,amsfonts,amsthm} % Math packages
\usepackage[svgnames]{xcolor} % Enabling colors by their 'svgnames'
\usepackage[hang, small,labelfont=bf,up,textfont=it,up]{caption} % Custom captions under/above floats in tables or figures
\usepackage{booktabs} % Horizontal rules in tables
\usepackage{fix-cm}	 % Custom font sizes - used for the initial letter in the document
\usepackage{natbib}
\usepackage{sectsty} % Enables custom section titles
\allsectionsfont{\usefont{OT1}{phv}{b}{n} \fontsize{12}{12}} % Change the font of all section commands
\usepackage{hyperref}
\usepackage{float}
\usepackage{fancyhdr} % Needed to define custom headers/footers
\pagestyle{fancy} % Enables the custom headers/footers
\usepackage{lastpage} % Used to determine the number of pages in the document (for "Page X of Total")

% Headers - all currently empty
\lhead{}
\chead{\emph{Vizualizing the African Slave Trade, 1514 - 1866}}
\rhead{}

% Footers
\lfoot{}
\cfoot{}
\rfoot{\footnotesize Page \thepage\ of \pageref{LastPage}} % "Page 1 of 2"

\renewcommand{\headrulewidth}{0.0pt} % No header rule
\renewcommand{\footrulewidth}{0.4pt} % Thin footer rule

\usepackage{lettrine} % Package to accentuate the first letter of the text
\newcommand{\initial}[1]{ % Defines the command and style for the first letter
\lettrine[lines=3,lhang=0.3,nindent=0em]{
\color{black}
{\textsf{#1}}}{}}
\usepackage{color}
\definecolor{purple}{rgb}{.4,0,.8}
\newcommand{\hh}[1]{{\color{magenta} #1}}
\newcommand{\st}[1]{{\color{purple} #1}}

%----------------------------------------------------------------------------------------
%	TITLE SECTION
%----------------------------------------------------------------------------------------

\usepackage{titling} % Allows custom title configuration

\newcommand{\HorRule}{\color{black} \rule{\linewidth}{1pt}} % Defines the gold horizontal rule around the title

\pretitle{\vspace{-50pt} \begin{flushleft} \HorRule \fontsize{15}{15} \usefont{OT1}{phv}{b}{n} \color{black} \selectfont} % Horizontal rule before the title

\title{Using the \texttt{geomnet} Package: Visualizing African Slave Trade, 1514 - 1866} % Your article title
 % This should probably reference geomnet. Don't want it to be too long though
\posttitle{\par\end{flushleft}\vskip 0em} % Whitespace under the title

\preauthor{\begin{flushleft}\large \vspace{-.5cm} \usefont{OT1}{phv}{b}{sl} \color{black}} % Author font configuration

\author{Sam Tyner, } % Your name

\postauthor{\footnotesize \usefont{OT1}{phv}{m}{sl} \color{Black} % Configuration for the institution name
Iowa State University % Your institution

\par\end{flushleft} \vspace{-.5cm} \HorRule \vspace{-1cm}} % Horizontal rule after the title
\date{} % Add a date here if you would like one to appear underneath the title block

%----------------------------------------------------------------------------------------

\begin{document}

\maketitle % Print the title

\thispagestyle{fancy} % Enabling the custom headers/footers for the first page 

%----------------------------------------------------------------------------------------
%	ABSTRACT
%----------------------------------------------------------------------------------------

% The first character should be within \initial{}
\vspace{-1cm}
%\initial{U}\textbf{sing a new way to visualize network data in \texttt{R} with \texttt{gglot2}, I examine the evolution of the African slave trade from the $16^{th}$ through the $19^{th}$ centuries. \st{XXX I feel like I need more here. Will add more when paper is more fleshed out.}}
\initial{T}\textbf{he Trans-Atlantic Slave Trade Database, hosted by Emory University, contains information on nearly 35,000 voyages of slave ships from 1514 - 1866 between Europe, Africa, and the Americas. The entire database contains 279 variables with information on the 34,948 voyages. While the website dedicated to this data contains a dashboard to subset and visualize the data, I wanted to view the data in a new way. I use the \texttt{geomnet} package because I wanted to show that the user can visually explore the data in a way that leaves them with a deeper understanding of the structure of the slave trade. I start by visualizing all of the data I pulled from the database on one map, then I look at different subsets of it, and I end with a much deeper understanding of the slave trade and its impact on the world.}
%----------------------------------------------------------------------------------------
%	ARTICLE CONTENTS
%----------------------------------------------------------------------------------------
\section*{Introduction}

\par The Trans-Atlantic Slave Trade Database, hosted by Emory University, contains information on nearly 35,000 voyages of slave ships from 1514 - 1866 between Europe, Africa, and the Americas \citep{voyages}. The data are extensive, and come chiefly from primary sources, such as ship manifests or family and business records. Although the current host of these data is Emory University, collecting this vital historic data has taken decades. In the last 15 years alone, over 50 individual researchers have contributed data from their own research to help complete this database. 

\par The entire database contains 279 variables with information on the 34,948 voyages. Some of the variables included in the database are the ships' owners, the country of origin of the ship, the number of men, women, and children that were taken from Africa, and the outcome of the voyage. The database also includes information on ships that were wrecked, captured, or never heard from again. For my visualizations, I only include trips with outcomes that were completed as planned, where slaves disembarked in the Americas or disembarked in Africa or Europe.  Additionally, due to the inconsistent nature of the historical data sources, there are many missing values, and 22 of the 279 variables are actually imputed.\footnote{See \url{http://www.slavevoyages.org/voyage/understanding-db/methodology-9} for more information on how the imputed variables are derived.} In order to fully appreciate the magnitude of this data, I use the imputed varibles because they contain the most information about the trans-Atlantic slave trade. By using the most robust variables, I can present the most complete visual analysis of the forced migration of Africans to the Americas.  

\par The website dedicated to exploring this data, \url{https://www.slavevoyages.org}, contains a dashboard to view and subset the data. It also hosts a graph builder for simple plots, such as scatterplots, time series, or bar graphs, as well as an interactive map and an animation of all slave ships leaving Africa and arriving in the Americas. While using these tools, I felt that the interactive map lacked detail and flexibility. It is possible for the user to zoom in to see more detail, but by zooming in, you lose the entire journey and can only focus on one port or one subregion at a time. There is not a way to view all the voyages individually on the map. The animation, which shows slave ships as dots flying across the Atlantic Ocean and arriving in the Americas, is beautiful, but it lacks permanence. Seeing the ships travel across the ocean is very informative, but not very impactful. A similar animiation appeared in Slate Magazine in June 2015 \citep{slate}. Neither of these visualizations contain other information about the ships, such as country of the ship or the number of slaves that perished on the journey. Finally, other animations by two researchers at Georgetown University show the cumulative frequencies of port of departure, port of slave purchase, and port of slave sale \citep{heatmaps}. All of these animations are beautiful, but I think they fail to leave the viewer with a real understanding of the sheer magnitude of this centuries-long practice of taking people from their homes and selling them into slavery in foreign countries.

\par I chose to visualize this data using \texttt{geomnet} because I wanted to show that the user can visually explore it in a way that leaves them with a deeper understanding of the structure of the slave trade. The visuals I created are static and dense: the viewer can examine them for much longer than the animations by Slate Magazine and the others, allowing the user to really sit with the visual and comprehend the severity of the slave trade. I created several visualizations of the Trans-Atlantic Slave Database in order to answer many more questions of interest than the other visualizations answer. A few questions I explore are: Which countries are engaging in the most slave trade? Where are the most slaves being bought and sold? How does the structure of the slave trade change over time? My visualizations give the viewer the ability to begin to answer these questions and more in an easy-to-understand graphic.  
%------------------------------------------------

\section*{The \texttt{geomnet} package}

\par To view the Trans-Atlantic Slave Trade Database in a new way, I use the \texttt{geomnet} package, which can be installed from \url{https://github.com/sctyner/geomnet}.  This package is built on the development version of \texttt{ggplot2}, which can be installed from \url{https://github.com/hadley/ggplot2}.  When the current development version of \texttt{ggplot2} is submitted to \texttt{CRAN}, \texttt{geomnet} will follow closely behind. 

\par The key function in \texttt{geomnet} is a new \texttt{geom} for \texttt{ggplot2}, \texttt{geom\_net()}.  The major advantage of using this new \texttt{geom} over other network packages like \texttt{network} or \texttt{igraph} is the data format required \citep{network, igraph}. To visualize networks using the current capabilities in those packages, the user needs to be intimately familiar with the structure of network data in these packages and how to manipulate it. The data required for \texttt{geomnet}, however, is just a data frame, like all \texttt{ggplot2} functions require. This is a major advantage for the users who find themselves with network data but have little to no experience with it. 

\par Generally speaking, there are two sets of information in network data: node information and edge information. Node data frames contain the node ids and information on the nodes, such as gender and age of all people in a friendship network, or all employees' departments in a company email network. Edge data frames contain the `from' node id and `to' node id for each each edge, as well as information on the edges, such as length of friendship between two people or time, date, and subject line of an email sent from one person to another. To use \texttt{geom\_net()}, the node and the edge information must be combined into one data frame. The structure of the data frame needed to visualize the network of interest depends on which of these two sets of information the user is primarily interested in visualizing. If the user is focused on node information, they need to perform a full join of the edge and node data by the `from' column of the edge data set and the `id' column of the node data set. If the user is focused on edge information, like I am when visualizing the slave trade data, they need to create two nearly identical rows of data for each edge: the second row is the same as the other with the `from' and `to' nodes reversed. Then, the user should perform the full join of the edge and node data frames. This ensures that all edges and all nodes have their information included in the visualization.   

\par Visualizing networks with \texttt{geom\_net} will feel very natural to users already familiar with \texttt{ggplot2}.  The arguments to pass to this function are 
  \begin{itemize}
  \item \texttt{directed}: a logical value to indicate whether the network is directed and to draw arrows pointing to the `to' node (default is \texttt{FALSE});
  \item \texttt{layout}: layout to use, from \texttt{gplot.layout.()} in \texttt{sna} (default is \texttt{Kamada-Kawai} \citep{kamadakawai}). Can also be set to \texttt{NULL} if the user wishes to provide \texttt{(x,y)} coordinates to place the nodes; 
  \item \texttt{layout.par}: parameters to pass to layout function, see \texttt{?gplot.layout} for more;
  \item \texttt{curvature}: a value to indicate how much to curve the edges using the new \texttt{geom\_curve()} function in \texttt{ggplot2} (default is 0);
  \item \texttt{fiteach}: if using facetting, a logical value indicating whether to use the same layout or a different layout in each panel (default is \texttt{TRUE});
  \item \texttt{arrowsize}: if \texttt{directed = TRUE}, use this parameter to change the size of the arrowheads by a numeric multiple;
    \item \texttt{arrow}: if the user wishes to completely change the arrow structure, they can pass an arrow specification created from \texttt{grid::arrow()} to this argument; 
  \item \texttt{arrowgap}: if \texttt{directed = TRUE}, use this parameter to avoid overplotting of arrowheads by shrinking the length of the edge by a small proportion (e.g. \texttt{arrowgap = 0.05});
  \item \texttt{selfies}: if a network contains self-referencing edges, where `from' and `to' nodes of an edge are identical, then set \texttt{selfies = TRUE} to view these edges (defaults to \texttt{FALSE});
  \item \texttt{label}: a character variable of names with which to label nodes. Position can be adjusted with \texttt{hjust} or \texttt{vjust} (defaults to \texttt{NULL});
  \item \texttt{ealpha}: a value between 0 and 1 to add transparency to the edges;
  \item \texttt{ecolour}: a character value which colors the edges;
  \item \texttt{labelcolour}: if \texttt{label} is non-null, a character value which colors the labels (defaults to the \texttt{colour} aesthetic applied to the nodes);   
  \end{itemize}
The required aesthetic options are 
  \begin{itemize}
  \item \texttt{from\_id}: the column containing the first node describing an edge in the network, and
  \item \texttt{to\_id}: the column containing the second node describing an edge in the network.
  \end{itemize}
  Other aesthetic options available to the user, besides the usual options for \texttt{geom\_point} and \texttt{geom\_segment} like \texttt{colour}, \texttt{alpha}, and \texttt{size}, are
  \begin{itemize}
  \item \texttt{x} and \texttt{y}: if \texttt{layout = NULL}, \texttt{x} and \texttt{y} set the locations of the nodes (e.g. longitude and latitude) 
  \item \texttt{group}: if you wish to emphasize that the `from' and `to' node for an edge have the same characteristic, you can group by a node variable and color by that variable to color the edges in the same group with that group's color while other edges remain grey.  
  \end{itemize}

%-----------------------------------------------------------------------------  
% Section : Visualizing the Data
<<setup, echo=FALSE>>=
datadir=".."

@

<<dat_read_clean,echo=FALSE, cache=TRUE, message=FALSE,warning=FALSE>>=
library(foreign)
st <- read.spss(file.path(datadir, "tastdb-exp-2010.sav"))
labels <- attr(st, "label.table")
fulldata <- data.frame(st)
completes <- which(fulldata$fate2 %in% c("Slaves disembarked Americas", "Slaves disembarked in Africa/Europe"))

# 'ptdepimp'=origin port of ship, 'mjbyptimp'=port where slaves taken aboard, 'mjslptimp'=port where slaves were left, 'slaximp'= # slaves departed from africa, 'slamimp'= # slaves arrived in americas,  'natinimp'=nation of ship

from_to <- na.omit(fulldata[completes,c('voyageid','ptdepimp', 'mjbyptimp', 'mjslptimp', 'slaximp', 'slamimp', 'natinimp')])

library(dplyr)
library(magrittr)
from_to$ptdepimp %<>% as.character
from_to$mjbyptimp %<>% as.character
from_to$mjslptimp %<>% as.character

json_file <- file.path(datadir, "locations_json.txt")
json_data <- rjson::fromJSON(file=json_file)
loc.type <- NULL
for (i in 1:931){
  type1 <- plyr::ldply(json_data[[i]][[2]])
  loc.type <- rbind(loc.type, type1)
}

broadregion.idx <- which(loc.type[,1] == 'voyage.broadregion')
place.idx <- which(loc.type[,1] == 'voyage.place')
region.idx <- which(loc.type[,1] == 'voyage.region')

broadregion.info <- NULL
for (i in broadregion.idx){
  info <- plyr::ldply(json_data[[i]][[3]])
  broadregion.info <- rbind(broadregion.info, info)
}

broadregion.info %<>% arrange(.id)
broadregion.info2 <- data.frame(value = broadregion.info[29:35,2], location.type = 'broad_region', location.name = broadregion.info[1:7,2],
                                latitude = broadregion.info[8:14,2], longitude = broadregion.info[15:21,2])

place.info <- NULL
for (i in place.idx){
  info <- plyr::ldply(json_data[[i]][[3]])
  place.info <- rbind(place.info, info)
}
place.info %<>% arrange(.id)
place.info2 <- data.frame(value = place.info[4993:5824,2], location.type = 'place', location.name = place.info[1665:2496,2],
           latitude = place.info[1:832,2], longitude = place.info[833:1664,2])

region.info <- NULL
for (i in region.idx){
  info <- plyr::ldply(json_data[[i]][[3]])
  region.info <- rbind(region.info, info)
}
region.info %<>% arrange(.id)
region.info2 <- data.frame(value = region.info[553:644,2], location.type = 'region', location.name = region.info[277:368,2],
           latitude = region.info[93:184,2], longitude = region.info[185:276,2])
locations.info <- rbind(broadregion.info2, region.info2, place.info2)
locations.info$value %<>% as.character %<>% as.numeric
locations.info$location.name %<>% as.character
locations.info$longitude %<>% as.character %<>% as.numeric
locations.info$latitude %<>% as.character %<>% as.numeric

from_to$ptdepimp[which(from_to$ptdepimp == "Guadaloupe, port unspecified")] <- "Guadeloupe, port unspecified"
from_to$mjbyptimp[which(from_to$mjbyptimp == "Guadaloupe, port unspecified")] <- "Guadeloupe, port unspecified"
from_to$mjslptimp[which(from_to$mjslptimp == "Guadaloupe, port unspecified")] <- "Guadeloupe, port unspecified"

from_to$ptdepimp[which(from_to$ptdepimp == "St. Paul de Loanda")] <- "St. Paul"
from_to$mjbyptimp[which(from_to$mjbyptimp == "St. Paul de Loanda")] <- "St. Paul"
from_to$mjslptimp[which(from_to$mjslptimp == "St. Paul de Loanda")] <- "St. Paul"

from_to$ptdepimp[which(from_to$ptdepimp == "New York, port unspecified")] <- "New York"
from_to$mjbyptimp[which(from_to$mjbyptimp == "New York, port unspecified")] <- "New York"
from_to$mjslptimp[which(from_to$mjslptimp == "New York, port unspecified")] <- "New York"

from_to$ptdepimp[which(from_to$ptdepimp == "Marseille")] <- "Marseilles"
from_to$mjbyptimp[which(from_to$mjbyptimp == "Marseille")] <- "Marseilles"
from_to$mjslptimp[which(from_to$mjslptimp == "Marseille")] <- "Marseilles"

from_to$ptdepimp[which(from_to$ptdepimp == "Saint John")] <- "Saint John (Antigua)"
from_to$mjbyptimp[which(from_to$mjbyptimp == "Saint John")] <- "Saint John (Antigua)"
from_to$mjslptimp[which(from_to$mjslptimp == "Saint John")] <- "Saint John (Antigua)"

from_to$ptdepimp[which(from_to$ptdepimp == "Senegal")] <- "French Africa (Goree or Senegal)"
from_to$mjbyptimp[which(from_to$mjbyptimp == "Senegal")] <- "French Africa (Goree or Senegal)"
from_to$mjslptimp[which(from_to$mjslptimp == "Senegal")] <- "French Africa (Goree or Senegal)"

from_to$ptdepimp[which(from_to$ptdepimp == "Bance Island")] <- "Bance Island (Ben's Island)"
from_to$mjbyptimp[which(from_to$mjbyptimp == "Bance Island")] <- "Bance Island (Ben's Island)"
from_to$mjslptimp[which(from_to$mjslptimp == "Bance Island")] <- "Bance Island (Ben's Island)"

from_to$ptdepimp[which(from_to$ptdepimp == "Cape Mount")] <- "Cape Mount (Cape Grand Mount)"
from_to$mjbyptimp[which(from_to$mjbyptimp == "Cape Mount")] <- "Cape Mount (Cape Grand Mount)"
from_to$mjslptimp[which(from_to$mjslptimp == "Cape Mount")] <- "Cape Mount (Cape Grand Mount)"

from_to$ptdepimp[which(from_to$ptdepimp == "Anomabu, Adja, Agga")] <- "Anomabu"
from_to$mjbyptimp[which(from_to$mjbyptimp == "Anomabu, Adja, Agga")] <- "Anomabu"
from_to$mjslptimp[which(from_to$mjslptimp == "Anomabu, Adja, Agga")] <- "Anomabu"

from_to$ptdepimp[which(from_to$ptdepimp == "Windward + Ivory + Gold +  Benin")] <- "Windward + Ivory + Gold + Benin"
from_to$mjbyptimp[which(from_to$mjbyptimp == "Windward + Ivory + Gold +  Benin")] <- "Windward + Ivory + Gold + Benin"
from_to$mjslptimp[which(from_to$mjslptimp == "Windward + Ivory + Gold +  Benin")] <- "Windward + Ivory + Gold + Benin"

from_to$ptdepimp[which(from_to$ptdepimp == "Sestos")] <- "Young Sestos"
from_to$mjbyptimp[which(from_to$mjbyptimp == "Sestos")] <- "Young Sestos"
from_to$mjslptimp[which(from_to$mjslptimp == "Sestos")] <- "Young Sestos"

from_to$ptdepimp[which(from_to$ptdepimp == "Côte de Malaguette")] <- "Côte de Malaguette (runs through to Cape Palmas on Windward Coast)"
from_to$mjbyptimp[which(from_to$mjbyptimp == "Côte de Malaguette")] <- "Côte de Malaguette (runs through to Cape Palmas on Windward Coast)"
from_to$mjslptimp[which(from_to$mjslptimp == "Côte de Malaguette")] <- "Côte de Malaguette (runs through to Cape Palmas on Windward Coast)"

from_to$ptdepimp[which(from_to$ptdepimp == "Sugary")] <- "Sugary (Siekere)"
from_to$mjbyptimp[which(from_to$mjbyptimp == "Sugary")] <- "Sugary (Siekere)"
from_to$mjslptimp[which(from_to$mjslptimp == "Sugary")] <- "Sugary (Siekere)"

from_to$ptdepimp[which(from_to$ptdepimp == "Surinam")] <- "Suriname"
from_to$mjbyptimp[which(from_to$mjbyptimp == "Surinam")] <- "Suriname"
from_to$mjslptimp[which(from_to$mjslptimp == "Surinam")] <- "Suriname"

from_to$ptdepimp[which(from_to$ptdepimp == "Newcastle")] <- "Newcastle (Nevis)"
from_to$mjbyptimp[which(from_to$mjbyptimp == "Newcastle")] <- "Newcastle (Nevis)"
from_to$mjslptimp[which(from_to$mjslptimp == "Newcastle")] <- "Newcastle (Nevis)"

from_to$ptdepimp[which(from_to$ptdepimp == "Vera Cruz")] <- "Veracruz"
from_to$mjbyptimp[which(from_to$mjbyptimp == "Vera Cruz")] <- "Veracruz"
from_to$mjslptimp[which(from_to$mjslptimp == "Vera Cruz")] <- "Veracruz"

from_to$ptdepimp[which(from_to$ptdepimp == "Spanish Central America, port unspecified")] <- "Spanish Americas, port unspecified"
from_to$mjbyptimp[which(from_to$mjbyptimp == "Spanish Central America, port unspecified")] <- "Spanish Americas, port unspecified"
from_to$mjslptimp[which(from_to$mjslptimp == "Spanish Central America, port unspecified")] <- "Spanish Americas, port unspecified"

from_to$ptdepimp[which(from_to$ptdepimp == "Santo Domingo, port unspecified")] <- "Saint-Domingue, port unspecified"
from_to$mjbyptimp[which(from_to$mjbyptimp == "Santo Domingo, port unspecified")] <- "Saint-Domingue, port unspecified"
from_to$mjslptimp[which(from_to$mjslptimp == "Santo Domingo, port unspecified")] <- "Saint-Domingue, port unspecified"

from_to$ptdepimp[which(from_to$ptdepimp == "La Guiara")] <- "La Guaira"
from_to$mjbyptimp[which(from_to$mjbyptimp == "La Guiara")] <- "La Guaira"
from_to$mjslptimp[which(from_to$mjslptimp == "La Guiara")] <- "La Guaira"

from_to$ptdepimp[which(from_to$ptdepimp == "Spanish West Indies, colony unspecified")] <- "Spanish Caribbean, unspecified"
from_to$mjbyptimp[which(from_to$mjbyptimp == "Spanish West Indies, colony unspecified")] <- "Spanish Caribbean, unspecified"
from_to$mjslptimp[which(from_to$mjslptimp == "Spanish West Indies, colony unspecified")] <- "Spanish Caribbean, unspecified"

from_to$yeardep <- fulldata$yeardep[which(fulldata$voyageid %in% from_to$voyageid)]
from_to$yearaf <- fulldata$yearaf[which(fulldata$voyageid %in% from_to$voyageid)]
from_to$yearam <- fulldata$yearam[which(fulldata$voyageid %in% from_to$voyageid)]
from_to$sladeath <- from_to$slaximp - from_to$slamimp

from_to <- from_to[-which(from_to$mjslptimp == "???"),]
from_to <- from_to[-grep('074', as.character(from_to$mjbyptimp)),]
from_to$century <- as.numeric(substr(as.character(from_to$yeardep), 1,2)) + 1

ports <- data.frame(name = unique(c(unique(from_to$ptdepimp), unique(from_to$mjbyptimp), unique(from_to$mjslptimp))))

ports <- merge(ports, locations.info, by.x = 'name', by.y = 'location.name')

library(sp)
coords2country = function(points){  
  countriesSP <- rworldmap::getMap(resolution='low')
  # convert our list of points to a SpatialPoints object
  # setting CRS directly to that from rworldmap
  pointsSP = sp::SpatialPoints(points, proj4string=CRS(proj4string(countriesSP)))  
  # use 'over' to get indices of the Polygons object containing each point 
  indices = sp::over(pointsSP, countriesSP)
  # return the ADMIN names of each country
  indices$ADMIN  
}

ports$country <- coords2country(ports[,c('longitude','latitude')])

# function to create a data set appropirate for network plotting. 
# variable, from_id, to_id, node_id need to be characters. value needs to be character or numeric. 
create_net_data3 <- function(edge_data, node_data, variable = NULL, value = NULL, from_id, to_id, node_id){
  if (!is.null(variable) && !is.null(value)){
    idx <- which(edge_data[, variable] %in% value)
    edge_data <- edge_data[idx,]
  } else{edge_data <- edge_data}
  edge_data$arrowsize <- 1
  edge_data2 <- edge_data
  edge_data2[,from_id] <- edge_data[,to_id]
  edge_data2[,to_id] <- edge_data[,from_id]
  edge_data2$arrowsize <- 0
  edge_data <- rbind(edge_data, edge_data2)
  nodes1 <- unique(as.character(edge_data[,from_id]))
  nodes2 <- unique(as.character(edge_data[,to_id]))
  nodes <- unique(c(nodes1, nodes2))
  node_idx <- which(node_data[, node_id] %in% nodes)
  node_data <- node_data[node_idx,]
  net_data <- merge(edge_data, node_data, by.x = from_id, by.y = node_id, all = T)
}
@

\section*{Visualizing the data}  

I start by visualizing all of the data I pulled from the database on one map. This first visualization, shown in \autoref{fig:whole_dataset_plot}, contains all of the voyages from 1525 - 1864 between Africa and the Americas. This visualization represents voyages that were unwittingly made by 5,095,270 Africans in the 339 years of the trans-Atlantic slave trade. In this first visualization and others, I use the \texttt{colour} and \texttt{group} aesthetic options to color both the nodes and the edges in the network by country of origin of the ships making the voyages. I also use the \texttt{directed = TRUE} option to show that the slaves aboard the ship were brought \emph{from} Africa \emph{to} the Americas. Finally, I use the \texttt{layout = NULL} option and \texttt{x} and \texttt{y} aesthetic options to place the ports in their geographically correct locations. 

\par We can see in \autoref{fig:whole_dataset_plot} that most slaves were brought to islands in the Caribbean, with the most traffic by British, French, and Spanish ships. The two smallest countries involved, Portugal and the Netherlands, appear to have had almost total control of the slave trade in Brazil and on the north coast of South America, respectively. And in the United States, most of the ships that arrive bringing slaves are British or French ships, reflecting the control the British and the French had of American territories before the Revolutionary War. Most of the people taken from Africa were from western coastal countries in regions that were referred to as the ``Gold Coast," the ``Ivory Coast," and the ``Slave Coast," which today consist of the countries Guinea, Sierra Leone, Liberia, C\^{o}te d'Ivoire, Ghana, Togo, Benin, Nigeria, Cameroon, Gabon, and Equatorial Guinea.  A drawback of this plot is that the data set contains 18,117 voyages, so there is some over-plotting. And though I use the \texttt{ealpha} parameter in \texttt{geomnet} to alleviate some of it, the points are still over-plotted, so from now on I focus on specific interesting subsets of the data. On the other hand, the sheer quantity of lines crossing the Atlantic ocean helps give weight to this story. Millions of Africans are represented in those lines, and hundreds of thousands never made it to the other size of the ocean. Seeing these huge jumbles of lines gives the viewer a better sense of the consequences of the atrocities committed: our European and American ancestors kidnapped millions of people to make a profit.  

<<whole_dataset_plot, echo = FALSE, message=FALSE,warning=FALSE, fig.cap="The entire network of completed slave ship trips from Africa to the Americas from 1525 - 1864.", fig.pos='h'>>=
library(ggplot2)
library(geomnet)

myborders <- function(xlim=c(-105,75), ylim = c(-50,50)) {
  paths <- borders("world", colour="gray50", fill=NA,
          xlim=xlim, ylim = ylim)
  data <- paths$data
  data$long <- pmax(data$long, min(xlim))
  data$long <- pmin(data$long, max(xlim))
  data$lat <- pmax(data$lat, min(ylim))
  data$lat <- pmin(data$lat, max(ylim))
  paths$data <- data
  paths
}

mp <- NULL
#mapWorld <- borders("world", colour="gray50", fill=NA) # create a layer of borders
mapWorld <- myborders(xlim=c(-105,75), ylim = c(-50,50))
mp <- ggplot() +   mapWorld 
theme_set(theme_bw())

slavenet_all <- create_net_data3(edge_data = from_to, node_data = ports, variable = NULL, value = NULL, from_id = "mjbyptimp" , to_id = "mjslptimp", node_id = "name")

# from_to_lat <- merge(from_to, ports[,c("name", "longitude", "latitude")], by.x="mjbyptimp", by.y="name")
# from_to_lat <- merge(from_to_lat, ports[,c("name", "longitude", "latitude")], by.x="mjslptimp", by.y="name")

# didn't work
# slavenet_all2 <- create_net_data(edge_data = from_to_lat, node_data = ports, variable = NULL, value = NULL, from_id = "mjbyptimp" , to_id = "mjslptimp", node_id = "name")


# I think arrowgap is behaving weirdly. color is also behaving weirdly
mp + geom_net(data= slavenet_all, layout = NULL, 
              directed = TRUE, ealpha = .1, arrowgap = 1, 
          aes(x=longitude, y = latitude, from_id = mjbyptimp, to_id=mjslptimp,
              color = natinimp, arrowsize = 2*arrowsize, group = natinimp)) +
  scale_color_brewer(palette = 'Set1', name = "Ship's Nation") + 
  theme(legend.position = 'bottom') + lims(x = c(-105,75), y = c(-50,50))

# mp + geom_point(data= from_to_lat, aes(x=longitude.x, y = latitude.x)) +
#   geom_point(data= from_to_lat, aes(x=longitude.y, y = latitude.y)) +
#   geom_segment(data= from_to_lat, aes(x=longitude.x, xend=longitude.y, 
#                    y=latitude.x, yend=latitude.y, colour=natinimp), alpha=0.1) +
#   facet_wrap(~natinimp) +
#   theme(legend.position = 'bottom') + lims(x = c(-105,75), y = c(-50,50)) +
#   guides(colour = guide_legend(override.aes = list(alpha=1)))
@

<<values, echo=FALSE>>=
summ1807 <- from_to %>% filter(yearam ==1807) %>% summarize(n.dep = sum(slaximp), n.arr = sum(slamimp))
@
\par The next visualization, in \autoref{fig:biggest_year}, shows the structure of the slave trade network in its busiest year, 1807.  This was the year with the largest number of slaves ships arriving in the Americas.  There were 275 ships that sold slaves in the Americas that year, and 64,109 Africans were sold into slavery that year. And since the database also contains information on how many slaves embarked in Africa, we also know that 73,215 people began those journeys: \Sexpr{round(as.numeric(summ1807$n.dep)) - round(as.numeric(summ1807$n.arr))} Africans died along the way. Interestingly, 1807 was also the year that both Great Britain and the United States made the slave trade illegal.\footnote{See \url{https://en.wikipedia.org/wiki/Abolition_of_slavery_timeline} for more.} We can also see from the plot that the countries' patterns of slave trade are very well-establish 282 years after the first slave ships arrived in the Americas in 1525. British ships travelled primarily to the Caribbean, with some sales in the southern United States, while Portuguese ships only sold slaves in Brazil, and the United States ships sold slaves almost exclusively in Charleston, SC and New Orleans, LA. 

<<biggest_year, echo = FALSE, message=FALSE,warning=FALSE, fig.cap="Slave trade in 1807, the year with the most slave ships arriving in the Americas.", fig.pos='h'>>=
st1807 <- create_net_data3(edge_data = from_to, node_data = ports, variable = "yearam", value = 1807, from_id = "mjbyptimp" , to_id = "mjslptimp", node_id = "name")

mp + geom_net(data= st1807, layout = NULL, directed = TRUE, 
              ealpha = .3, arrowgap = 1,
          aes(x=longitude, y = latitude, from_id = mjbyptimp, to_id=mjslptimp,
              color = natinimp, arrowsize = arrowsize, group = natinimp)) +
  scale_color_brewer(palette = 'Set1', name = "Ship's Nation") + 
  theme(legend.position = 'bottom') + lims(x = c(-105,75), y = c(-50,50))
@

\par British ships also made more trips than any other country in the slave trade. From 1562 to 1809 (a period of 247 years), British ships made 7,585 trips carrying over 2.1 \emph{million} Africans, and selling over 1.8 million into slavery, with nearly 300,000 total deaths along the way. On average, a British slave ship carried about 283 Africans, 39 of which died along the way. From the visualization of Great Britain's participation in the slave trade in \autoref{fig:gb}, we see that the vast majority of the British ships made voyages in the $18^{th}$ century. The British empire was extremely influential, and their ships sold Africans into slavery everywhere in the Americas: from New York in the United States, to Montevideo in Uruguay, and almost everywhere with a port in between. The only noticeable gap exists in Brazil, where the Portuguese had a near monopoly on the slave trade.

<<gb, echo = FALSE, message=FALSE,warning=FALSE, fig.cap="All slave trade voyages by British ships, 1562-1809. Color represents the century in which the ship departed Africa with slaves.", fig.pos='h'>>=
stgb <- create_net_data3(edge_data = from_to, node_data = ports, variable = "natinimp", value = 'Great Britain', from_id = "mjbyptimp" , to_id = "mjslptimp", node_id = "name")


mp + geom_net(data= stgb, layout = NULL, directed = TRUE, ealpha = .2, arrowgap = 1, 
          aes(x=longitude, y = latitude, from_id = mjbyptimp, to_id=mjslptimp,
              color = as.factor(century), group = century, arrowsize= arrowsize)) + 
  scale_color_brewer(palette = 'Spectral', name = 'Century') + 
  theme(legend.position = 'bottom') + lims(x = c(-105,75), y = c(-50,50))
@

The second largest participant in the slave trade was the country of Portugal. Portuguese ships began travelling to Africa to buy and sell slaves in 1525 and they did not stop until 1854, a span of 329 years. Portugal forced Africans into slavery for 90 years \emph{longer} than the United States of America has been a country. There have only been 179 years since they outlawed it, and only 161 years since Portugal actually stopped that practice. The impact of this is almost unimaginable. Over 1.9 \emph{million} Africans were taken by the Portuguese, and over 1.7 million were sold into slavery in the Americas, with 200,491 dying during the ocean crossing. The map of the Portuguese slave trade is given in in \autoref{fig:portugal}. The most Portuguese slave voyages occurred in the $19^{th}$ century, with 3,249 slave ship trips across the Alantic in the years 1800-1854. In those 54 years, over 1.3 \emph{million} Africans were forced across the ocean and into slavery, with 124,280 perishing along the way. The Portuguese did over two-thirds of their slave trading in the last 54 of the 329 years they participated. It's easy to imagine that it would have gotten much worse if slave trading had been outlawed later. 
 
<<portugal, echo = FALSE, message=FALSE,warning=FALSE, fig.cap="Slave trading voyages by Portuguese ships from 1525-1854. Color represents the century in which the ship departed Africa with slaves.", fig.pos='h'>>=
portugal <- create_net_data3(edge_data = from_to, node_data = ports, variable = "natinimp", value = "Portugal / Brazil", from_id = "mjbyptimp" , to_id = "mjslptimp", node_id = "name")

mp + geom_net(data= portugal, layout = NULL, directed = TRUE, ealpha = .1, arrowgap = 1,
          aes(x=longitude, y = latitude, from_id = mjbyptimp, to_id=mjslptimp,
              color = as.factor(century), group = century)) + 
  scale_color_brewer(palette = 'Spectral', name = 'Century') +
  theme(legend.position = 'bottom') + lims(x = c(-105,75), y = c(-50,50))
@


<<deaths,echo = FALSE, eval = FALSE, message=FALSE,warning=FALSE, fig.cap="Visualizing deaths of captives during trip. The wider the edge, the more deaths there were on the voyage.", fig.pos='h'>>=
stdeaths <- create_net_data3(edge_data = subset(from_to, sladeath >=0), node_data = ports, variable = "yearam", value = 1807, from_id = "mjbyptimp" , to_id = "mjslptimp", node_id = "name")

mp + geom_net(data= stdeaths , layout = NULL, directed = TRUE, ealpha = .2, arrowgap = 1,
          aes(x=longitude, y = latitude, from_id = mjbyptimp, to_id=mjslptimp,
              linewidth = sladeath/20)) + 
  theme(legend.position = 'bottom') + lims(x = c(-105,75), y = c(-50,50))
@

\par For British ships overall, about 13.7\% of all Africans died before even reaching the port where they were sold into slavery. This is comparable to ships from Spain, the Netherlands, France, and Denmark, which all had death rates of about 13.6\%, 14.0\%, 13.3\%, and 13.9\%, respectively.  Portuguese ships had the smallest rate of journey deaths, at about 10.1\%, while the American (USA) ships had the highest death rate, at about 16.3\%. In the next visualization, \autoref{fig:slaves_usa}, the points the represent the trading ports are sized by the number of slaves embarked if a departure port or disembarked if a port of slave sale. Most of the points in Africa look bigger than the ports in the Americas, demonstrating the 16.3\% rate of deaths. We also see that the U.S.-owned slave ships did not only sell slaves in the United States. The majority of them, like the British ships, sold slaves in the Caribbean and not in the U.S. All in all, American ships were responsibe for forcing 141,050 Africans overseas and into slavery, with 22,955 dying on the voyage. And, of the 118,095 slaves sold into slavery by American ships, 30,754 of them actually ended up in the United States, while the rest were sold into slavery in the Caribbean and South America.

<<slaves_usa, echo=FALSE, message=FALSE, warning=FALSE, fig.cap = "All slave trade ship voyages by U.S. ships. Size and color of points represents the number of slaves embarked and disembarked on each voyage.", fig.pos='h'>>=
  usa <- subset(from_to, natinimp == 'USA')
  usa$arrowlength <- 1
  usa2 <- usa
  usa2[,"mjbyptimp"] <- usa[,"mjslptimp"]
  usa2[,"mjslptimp"] <- usa[,"mjbyptimp"]
  usa2$slaximp <- usa$slamimp
  usa2$arrowlength <- 0
  usa3 <- rbind(usa, usa2)
  nodes1 <- unique(as.character(usa3$mjbyptimp))
  nodes2 <- unique(as.character(usa3$mjslptimp))
  nodes <- unique(c(nodes1, nodes2))
  node_idx <- which(ports$name %in% nodes)
  ports3 <- ports[node_idx,]
  usa_death_data <- merge(usa3, ports, by.x = "mjbyptimp", by.y = "name", all = T)

mp + geom_net(data= usa_death_data, layout = NULL, 
              ealpha = .1, arrowgap = 1, directed = TRUE,
              aes(x=longitude, y = latitude, from_id = mjbyptimp, to_id=mjslptimp,
                   size = slaximp, arrowsize = arrowlength, colour = slaximp)) +
  scale_color_gradient(low = 'red', high = 'blue', name = "Number of Slaves") +
  scale_size_continuous(name = 'Number of Slaves') + 
  theme(legend.position = 'bottom') + lims(x = c(-105,75), y = c(-50,50)) 
@

\par Next I explore the evolution of the slave trade over time. In the first twenty-five years of slaves being sold in the Americas, from 1525-1550, there were only two voyages that arrived. Both were Portuguese ships carrying 300 slaves from S\~{a}o Tom\'{e} in the Gulf of Guinea to the Caribbean. In \autoref{fig:first_years} the first 75 years of voyages, from 1525 to 1600 are shown. There are 98 voyages in these first years, taking 20,951 Africans from their homes and selling 15,322 of them into slavery, with 5,629 dying during the trip across the Atlantic. The only countries participating in in the slave trade in these first years are Spain, Portugal, and Great Britain, and they are only embarking and disembarking at 20 different ports: ten in Africa and ten in the Americas. We can see that Portugal had not yet focused on selling slaves exclusively in Brazil, and the Spanish only sold slaves in modern-day Venezuela. 

<<first_years, echo=FALSE, message=FALSE, warning=FALSE, fig.cap="All ships arriving in the Americas in the first 75 years of the slave trade, from 1525-1600.", fig.pos='h'>>=
firstyears75 <- create_net_data3(edge_data = subset(from_to, yearam %in% c(1525:1600)), node_data = ports, variable = NULL, value = NULL, from_id = "mjbyptimp" , to_id = "mjslptimp", node_id = "name")
firstyears75$label <- NA
firstyears75$label[which(firstyears75$arrowsize == 1)] <- firstyears75$mjbyptimp[which(firstyears75$arrowsize == 1)]
firstyears75$label[which(is.na(firstyears75$label))] <- firstyears75$mjslptimp[which(firstyears75$arrowsize == 1)]
firstyears75$label <- sub(", port unspecified", '', firstyears75$label)


mp + geom_net(data= firstyears75, layout = NULL, ealpha = .4, arrowgap = 1, 
              directed = TRUE, vjust = 1,hjust=-.05, labelcolour = 'black',
              aes(x=longitude, y = latitude, from_id = mjbyptimp, to_id=mjslptimp,
                   arrowsize = arrowsize, color = natinimp, group = natinimp#, label = label
                  )) +
  scale_color_brewer(palette = 'Set1', name = "Ship's Nation") +
  theme(legend.position = 'bottom') + lims(x = c(-105,75), y = c(-25,30)) 
@

\par I also consider the last years of the slave trade. The last year of the slave trade was 1864, and only one ship sold slaves in the Americas that year: a French ship carried 673 Africans from the Congo River area and sold them into slavery in Cuba despite the fact that the slave trade was outlawed in France over 40 years prior in 1818. The last country in the dataset to abolish the slave trade was Portugal, in 1836, yet the slave trade continued for almost two decades more, albeit at a much slower pace. The American ships that were still trading after 1807 were able to do so because the slave trade ban in the U.S. technically only prohibited import of new slaves to the United States. American slave ships still participated in the slave trade by mostly avoiding ports in US territory, selling slaves in the Caribbean and South America instead. This is shown in \autoref{fig:us1808}, with the years of disembarkation and embarkation of slaves printed using the \texttt{label} aesthetic. There is some over-plotting of the labels, but we can see that most of the slave trade routes still being run by US ships after the ban end with slaves being sold in Brazil and in Cuba, where the Portuguese slave traders were ever-present. 

<<us1808, echo=FALSE, message=FALSE, warning=FALSE, fig.cap="All US ships still participating in the slave trade after its ban in the US in 1807.", fig.pos='h'>>=
us1808 <- create_net_data3(edge_data = filter(from_to, natinimp == "USA", yearam >=1808), node_data = ports, variable = NULL, value = NULL, from_id = "mjbyptimp" , to_id = "mjslptimp", node_id = "name")
us1808$label <- ""
us1808$label[which(us1808$arrowsize == 1)] <- us1808$yearaf[which(us1808$arrowsize == 1)]
us1808$label[which(us1808$arrowsize == 0)] <- us1808$yearam[which(us1808$arrowsize == 0)]

mp + geom_net(data= us1808, layout = NULL, ealpha = .4, arrowgap = 1, 
              directed = TRUE,  vjust = runif(175,-2,0),hjust=runif(175,0,1), labelcolour = 'navy', size = .5,
              color = 'navy',
              aes(x=longitude, y = latitude, from_id = mjbyptimp, to_id=mjslptimp,
                   arrowsize = arrowsize, label = label
                  )) +
  scale_color_brewer(palette = 'Set1', name = "Ship's Nation") +
  theme(legend.position = 'bottom') + lims(x = c(-100,75), y = c(-50,50)) 
@

\par Next, I look at the years after Portugal banned the slave trade, from 1837 to the last year in the data, 1864, for all countries.  There were 778 trans-Atlantic slave trade voyages in that time, and they are shown in \autoref{fig:postban}. Most of these are Portuguese ships, with US and Spanish ships close behind, and nearly all of the trips are to Brazil and the Caribbean.  Interestingly, the most prolific slave trading country, Great Britain, does not appear at all, suggesting that they were most successful in enforcing their bans on slave trade. In fact, the last year that British ships participated in the slave trade was 1810, with only one voyage that year. There were 33 other voyages after the ban, all landing in the Americas in 1808. Given the time it takes to travel across the Atlantic by ship, it is probable that most of those 33 trips began before the slave trade was made illegal. Other countries were nowhere near as good as enforcing their bans on the slave trade. 

<<postban, echo=FALSE, message=FALSE, warning=FALSE, fig.cap="All slave trade expeditions that took place after the practice was outlawed in all of the countries that participated.", fig.pos='h'>>=
postban <- create_net_data3(edge_data = filter(from_to, yearam >=1837), node_data = ports, variable = NULL, value = NULL, from_id = "mjbyptimp" , to_id = "mjslptimp", node_id = "name")
#postban$label <- ""
#postban$label[which(postban$arrowsize == 1)] <- postban$yearaf[which(postban$arrowsize == 1)]
#postban$label[which(postban$arrowsize == 0)] <- postban$yearam[which(postban$arrowsize == 0)]

mp + geom_net(data= postban, layout = NULL, ealpha = .4, arrowgap = 1, 
              directed = TRUE,
              aes(x=longitude, y = latitude, from_id = mjbyptimp, to_id=mjslptimp,
                   arrowsize = arrowsize, color = natinimp, group = natinimp
                  )) +
  scale_color_brewer(palette = 'Set1', name = "Ship's Nation") +
  theme(legend.position = 'bottom') + lims(x = c(-100,75), y = c(-50,50)) 
@

\par Finally, I look at the trans-Atlantic slave trade as a traditional network, ignoring the geographical locations of the ports, in order to see which ports played the most central roles in the slave trade. For this visualization I explore a country that we have not yet seen by itself: Spain. Spanish ships made 444 total trips from 1593 to 1859, taking 142,645 people from Africa and selling 123,186 of them into slavery, with 19,459 people dying on the voyages. In \autoref{fig:spain}, I used the Fructerman-Reingold force-directed layout to arrange the nodes and I sized the width of the lines according to the number of slaves on a voyage using the \texttt{linewidth} aesthetic option \citep{fruchterman}. I also labeled a select number of port names in order to see which were most important in the Spanish slave trade network.  The most common points of slave sale are the port of Havana in Cuba, and all other ports in Cuba, as well as the port of Cartagena in Colombia and unspecified ports in Sierra Leone. The frequency of trips \emph{to} Sierra Leone is unusual. As Sierra Leone is a country on the west coast of Africa, I would have expected it to be a port of embarkation instead of a point of disembarkation. The `from' ports of trips taking slaves to Sierra Leone, however, are also in Africa. This suggests that many Spanish slaving ships profited by taking Africans from all over the continent to Sierra Leone to then be sold to another ship's owner and taken across the Atlantic. 

<<spain, echo=FALSE, message=FALSE, warning=FALSE, fig.cap="The network of slave trade by Spanish ships from 1593 to 1859.", fig.pos='h'>>=
spain <- create_net_data3(edge_data = from_to, node_data = ports, variable ="natinimp", value = "Spain / Uruguay", from_id = "mjbyptimp" , to_id = "mjslptimp", node_id = "name")
spain$mjbyptimp <- sub(', port unspecified', '', spain$mjbyptimp)
spain$mjslptimp <- sub(', port unspecified', '', spain$mjslptimp)
spain$label <- ""
spain$label[c(1, 25, 37,46, 93,96, 129, 207,284,285,466,467, 596,689,819, 886)] <- spain$mjbyptimp[c(1, 25, 37,46, 93,96, 129, 207,284,285,466,467, 596,689,819,886)] 

set.seed(3)
ggplot() + geom_net(data= spain, directed = TRUE, layout = 'fruchtermanreingold',ealpha = .2, arrowgap = .01, vjust = -.2, size = 1, labelcolour = '#fb6a4a',
          aes(from_id = mjbyptimp, to_id=mjslptimp, arrowsize= arrowsize, label = label, linewidth = slaximp/110)) + lims(x = c(-.01,1.01), y = c(-.01,1.01))
@

\section*{Conclusion}

After exploring the Trans-Atlantic Slave Trade Database, I have a much deeper understanding of the slave trade than any history class has ever given me. Being able to see the voyages on the map and being able to look at individual voyages in the data helped to comprehend just how massive the slave trade was. Seeing the size of the points on the map shrink after crossing the ocean and seeing the huge numbers of trips made to the Caribbean really brought the horror of the slave trade to the forefront of my mind. Viewing the slaving voyages as a network was an incredibly effective way to visualize the slave trade data. 

\par The last slaving ship disembarked in Cuba 151 years ago, which sounds like a very long time ago, until you realize that the trans-Atlantic slave trade persisted for more than twice that amount of time.  Because of this, the slave trade has left a lasting impact on the Americas. For instance, in the United States of America, December 6, 2015, marked the $150^{th}$ anniversary of the abolition of slavery becoming law, yet there are still inequities in the way African-Americans are treated every day in in the U.S. Thus, the impact of the trans-Atlantic slave trade cannot be ignored, especially in light of this important anniversary. These visualizations are sure to bring that impact to the forefront of the viewer's mind. 
%----------------------------------------------------------------------------------------
%	REFERENCE LIST
%----------------------------------------------------------------------------------------
\bibliographystyle{abbrv}
\bibliography{ASA_SCSG_Paper}

%----------------------------------------------------------------------------------------

\end{document}